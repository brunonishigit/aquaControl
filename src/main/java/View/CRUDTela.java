    /*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import conexaoBD.ConnectFactory;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Residencia;

/**
 *
 * @author Hirok
 */
public class CRUDTela extends javax.swing.JFrame {
    private int usuarioId;
    
    DefaultTableModel modeloTabela;
    List<Residencia> listaResidencias = new ArrayList<>();
    
    public CRUDTela(int usuarioId) {
        initComponents();
        this.usuarioId = usuarioId;
        modeloTabela = new DefaultTableModel(
                new Object[]{"ID", "Nome", "Endereço", "Pessoas", "Consumo Mensal (L)"}, 0
);
        tabelaResidencias.setModel(modeloTabela);   
        
        carregarResidencias();
    }
    
    public int getUsuarioId() {
        return usuarioId;
    }
    
    public void carregarResidencias() {
        try (Connection con = ConnectFactory.obtemConexao()) {
            String sql = "SELECT id, nome, endereco, pessoas, consumo FROM residencia WHERE usuario_id = ?";
            PreparedStatement stmt = con.prepareStatement(sql);
            stmt.setInt(1, usuarioId); // só carrega as do usuário atual
            
            ResultSet rs = stmt.executeQuery();
            
            modeloTabela.setRowCount(0); // limpa a tabela

            while (rs.next()) {
                modeloTabela.addRow(new Object[]{
                    rs.getInt("id"), rs.getString("nome"), rs.getString("endereco"),
                    rs.getInt("pessoas"), rs.getInt("consumo")});
                
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Erro ao carregar residências: " + e.getMessage());
        }
    }

    // ... restante da sua classe (botões etc.)
    
public void adicionarResidencia(String nome, String endereco, int qtdPessoas, double mediaConsumo) {
        modeloTabela.addRow(new Object[]{nome, endereco, qtdPessoas, mediaConsumo});
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaResidencias = new javax.swing.JTable();
        adicionarButton = new javax.swing.JButton();
        excluirButton = new javax.swing.JButton();
        editarButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(102, 204, 255));

        tabelaResidencias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nome", "Endereço", "Número de pessoas", "Consumo Men. Recomendado"
            }
        ));
        jScrollPane2.setViewportView(tabelaResidencias);

        adicionarButton.setText("Adicionar");
        adicionarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adicionarButtonActionPerformed(evt);
            }
        });

        excluirButton.setText("Excluir");
        excluirButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excluirButtonActionPerformed(evt);
            }
        });

        editarButton.setText("Editar");
        editarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarButtonActionPerformed(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Blue Modern Dolphin Logo Design (1).png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(adicionarButton)
                        .addGap(137, 137, 137)
                        .addComponent(excluirButton)
                        .addGap(138, 138, 138)
                        .addComponent(editarButton)))
                .addContainerGap(49, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 174, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(adicionarButton)
                    .addComponent(excluirButton)
                    .addComponent(editarButton))
                .addGap(52, 52, 52))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void excluirButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excluirButtonActionPerformed
        // TODO add your handling code here:
        int linha = tabelaResidencias.getSelectedRow();
        if (linha != -1) {
            int idResidencia = (int) modeloTabela.getValueAt(linha, 0); // coluna 0 = id
            try (Connection con = ConnectFactory.obtemConexao()) {
            String sql = "DELETE FROM residencia WHERE id = ?";
            PreparedStatement stmt = con.prepareStatement(sql);
            stmt.setInt(1, idResidencia);
            stmt.executeUpdate();
            
            modeloTabela.removeRow(linha); // remove da tabela da interface
            
            } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Erro ao excluir: " + e.getMessage());
            }
            
            } else {
            JOptionPane.showMessageDialog(this, "Selecione uma residência para remover.");
}
        
    }//GEN-LAST:event_excluirButtonActionPerformed

    private void adicionarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adicionarButtonActionPerformed
        // TODO add your handling code here:
        Adicionar add = new Adicionar(this, usuarioId);
        add.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_adicionarButtonActionPerformed

    private void editarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarButtonActionPerformed
        // TODO add your handling code here:
        int linhaSelecionada = tabelaResidencias.getSelectedRow();      
        if (linhaSelecionada != -1) {
            int id = Integer.parseInt(modeloTabela.getValueAt(linhaSelecionada, 0).toString());
            String nome = tabelaResidencias.getValueAt(linhaSelecionada, 1).toString();
            String endereco = tabelaResidencias.getValueAt(linhaSelecionada, 2).toString();
            int pessoas = Integer.parseInt(tabelaResidencias.getValueAt(linhaSelecionada, 3).toString());

            Editar editar = new Editar(this, usuarioId, id, nome, endereco, pessoas);
            editar.setVisible(true);
            this.dispose();
            } else {
            JOptionPane.showMessageDialog(this, "Selecione uma residência para editar.");
        }
    }//GEN-LAST:event_editarButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton adicionarButton;
    private javax.swing.JButton editarButton;
    private javax.swing.JButton excluirButton;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable tabelaResidencias;
    // End of variables declaration//GEN-END:variables
}
